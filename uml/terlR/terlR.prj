format 74
"terlR"
  revision 7
  modified_by 2 "cbrenton"


  
  // class settings
  default_attribute_visibility private default_relation_visibility private default_operation_visibility public
  //class diagram settings
  draw_all_relations yes hide_attributes no hide_operations no hide_getset_operations no show_members_full_definition no show_members_visibility no show_members_stereotype no show_members_context no show_members_multiplicity no show_members_initialization no show_attribute_modifiers no member_max_width 127 show_parameter_dir yes show_parameter_name yes package_name_in_tab no class_drawing_mode natural drawing_language uml show_context_mode no auto_label_position yes show_relation_modifiers no show_relation_visibility no show_infonote no shadow yes show_stereotype_properties no
  //use case diagram settings
  package_name_in_tab no show_context no auto_label_position yes draw_all_relations yes class_drawing_mode actor shadow yes show_stereotype_properties no
  //sequence diagram settings
  show_full_operations_definition no write_horizontally yes class_drawing_mode natural drawing_language uml draw_all_relations yes shadow yes show_stereotype_properties no show_class_context_mode no show_msg_context_mode no
  //collaboration diagram settings
  show_full_operations_definition no show_hierarchical_rank no write_horizontally yes drawing_language uml package_name_in_tab no show_context no show_msg_context no draw_all_relations yes shadow yes show_stereotype_properties no
  //object diagram settings
   write_horizontally yes package_name_in_tab no show_context no auto_label_position yes draw_all_relations yes shadow yes show_stereotype_properties no
  //component diagram settings
  package_name_in_tab no show_context no auto_label_position yes draw_all_relations yes shadow yes
  draw_component_as_icon no show_component_req_prov no show_component_rea no show_stereotype_properties no
  //deployment diagram settings
  package_name_in_tab no show_context no write_horizontally yes auto_label_position yes draw_all_relations yes shadow yes
  draw_component_as_icon no show_component_req_prov no show_component_rea no show_stereotype_properties no
  //state diagram settings
  package_name_in_tab no show_context no auto_label_position yes write_trans_label_horizontally yes show_trans_definition no draw_all_relations yes shadow yes
  show_activities yes region_horizontally yes drawing_language uml show_stereotype_properties no
  //activity diagram settings
  package_name_in_tab no show_context no show_opaque_action_definition no auto_label_position yes write_flow_label_horizontally no draw_all_relations yes shadow yes
  show_infonote yes drawing_language uml show_stereotype_properties no
  
  class_color yellow duration_color transparent continuation_color gray note_color blue fragment_color transparent subject_color transparent usecase_color yellow package_color transparent component_color green artifact_color green deploymentnode_color gray state_color yellow stateaction_color transparent activity_color transparent activityregion_color transparent activitypartition_color transparent activityaction_color transparent parameterpin_color white 
  font_size 9
  diagram_format A4

  mark_for_import
  
  classview 128002 "terlR_class_view"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    classdiagram 128002 "terlR_classes"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    class 128002 "Image"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This stores and writes the pixel data to an image."
      attribute 128002 "height"
	public explicit_type "int"
	init_value "240"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The height in pixels of the image."
      end

      attribute 128130 "width"
	public explicit_type "int"
	init_value "320"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The width in pixels of the image."
      end

      attribute 128258 "filename"
	public explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the file to be output (minus the file extension)."
      end

      operation 128002 "write"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Writes the image out to a file."
      end

      attribute 128386 "pixelData"
	public type class_ref 128130 // Pixel
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} **${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The pixel data currently stored in the image."
      end
    end

    class 128130 "Pixel"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 149122 "clr"
	public type class_ref 148866 // color
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The color of the pixel."
      end

      attribute 128898 "alpha"
	private explicit_type "double"
	init_value "1.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The alpha value of the current pixel. Will never be used in most image types."
      end
    end

    class 128258 "sphere_t"
      visibility public stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}struct ${name} {
${members}};
"
      explicit_switch_type ""
      
      comment "A struct representing a sphere."
      attribute 129026 "radius"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The radius of the sphere."
      end

      attribute 135554 "location"
	private explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The location in world space of the sphere."
      end
    end

    class 141314 "Geometry"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract class representing a geometry object in a scene. Hit detection per object is done here."
      attribute 149250 "pigment"
	public type class_ref 149378 // Pigment
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The pigment of the geometry object."
      end

      attribute 151554 "finish"
	public type class_ref 149250 // Finish
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The finish of the geometry object."
      end

      attribute 151682 "location"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The location of the geometry object."
      end

      operation 139778 "hit"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 5
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "*t" explicit_type "float"
	  param in name "*data" type class_ref 150018 // HitData
	    defaultvalue "NULL"
	  param in name "minT" explicit_type "float"
	    defaultvalue "0.0f"
	  param in name "maxT" explicit_type "float"
	    defaultvalue "DIST_MAX"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Determines whether the input ray intersects the current geometry object. If it does not, returns 0. If it does, returns -1 if hit from within the object, or 1 if hit from outside the object, and correctly populates the fields of the input HitData object."
      end

      operation 139906 "getNormal"
	abstract cpp_virtual public explicit_return_type "Vector3f"
	nparams 1
	  param in name "point" explicit_type "Vector3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Returns the normal of the current geometry object at the specified point."
      end

      operation 140034 "bBox"
	abstract cpp_virtual public explicit_return_type "Box"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Gets the bounding box of the current geometry object."
      end

      attribute 167938 "transform"
	public explicit_type "Matrix3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}Eigen::${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 148738 "Scene"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 151298 "geometry"
	public type class_ref 141314 // Geometry
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "List of geometry objects (CPU only)."
      end

      attribute 151426 "spheres"
	protected type class_ref 128258 // sphere_t
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The vector of spheres in the scene (GPU only)."
      end

      attribute 152322 "planes"
	protected explicit_type "plane_t"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The vector of planes in the scene (GPU only)."
      end

      attribute 152450 "triangles"
	protected explicit_type "triangle_t"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The vector of triangles in the scene (GPU only)."
      end

      attribute 152578 "boxes"
	protected explicit_type "box_t"
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The vector of boxes in the scene (GPU only)."
      end

      operation 141698 "constructBVH"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Constructs a bounding volume heirarchy for the scene."
      end

      operation 141826 "read"
	class_operation public explicit_return_type "Scene*"
	nparams 1
	  param in name "input" explicit_type "std::istream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Reads in scene data from a file and returns a new Scene containing the newly stored data."
      end

      operation 141954 "hit"
	public explicit_return_type "bool"
	nparams 2
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "*data" type class_ref 150018 // HitData
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Checks if a ray intersects any geometry in the scene."
      end

      operation 142082 "castRay"
	public explicit_return_type ""
	nparams 2
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "depth" explicit_type "int"
	    defaultvalue "1"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Casts a ray into the scene and returns a correctly colored pixel."
      end

      operation 142210 "shade"
	public return_type class_ref 128130 // Pixel
	nparams 2
	  param in name "*data" type class_ref 150018 // HitData
	  param in name "view" explicit_type "Vector3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Calculates proper shading at the current point."
      end
    end

    class 148866 "color"
      visibility public stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}struct ${name} {
${members}};
"
      explicit_switch_type ""
      
      comment "Holds the red, green, and blue values of a color."
      attribute 148738 "r"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The red component of the color."
      end

      attribute 148866 "g"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The green component of the color."
      end

      attribute 148994 "b"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The blue component of the color."
      end
    end

    class 148994 "Ray"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 149378 "point"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The origin of the ray."
      end

      attribute 149506 "dir"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The direction of the ray."
      end
    end

    class 149250 "Finish"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 150402 "ambient"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 150530 "specular"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 150658 "diffuse"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 150786 "reflection"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 150914 "refraction"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 167810 "ior"
	public explicit_type "double"
	init_value "1.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The index of refraction of the finish."
      end
    end

    class 149378 "Pigment"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 151042 "c"
	private type class_ref 148866 // color
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 151170 "f"
	public explicit_type "double"
	init_value "0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 149506 "Sphere"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A geometry object representing a sphere."
      attribute 151810 "s"
	protected type class_ref 128258 // sphere_t
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The sphere_t struct representing the geometry object."
      end

      classrelation 135810 // <generalisation>
	relation 135554 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 135810 // <generalisation>
	  b parent class_ref 141314 // Geometry
      end

      operation 140418 "bBox"
	cpp_virtual public explicit_return_type "Box"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Gets the bounding box of the current geometry object."
      end

      operation 155650 "hit"
	cpp_virtual public explicit_return_type "int"
	nparams 5
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "*t" explicit_type "float"
	  param in name "*data" type class_ref 150018 // HitData
	    defaultvalue "NULL"
	  param in name "minT" explicit_type "float"
	    defaultvalue "0.0f"
	  param in name "maxT" explicit_type "float"
	    defaultvalue "DIST_MAX"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Determines whether the input ray intersects the current geometry object. If it does not, returns 0. If it does, returns -1 if hit from within the object, or 1 if hit from outside the object, and correctly populates the fields of the input HitData object."
      end

      operation 156546 "getNormal"
	cpp_virtual public explicit_return_type "Vector3f"
	nparams 1
	  param in name "point" explicit_type "Vector3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Returns the normal of the current geometry object at the specified point."
      end
    end

    class 149634 "Box"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A geometry object representing a box."
      attribute 151938 "b"
	protected explicit_type "box_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The box_t struct representing the geometry object."
      end

      operation 140802 "bBox"
	cpp_virtual public explicit_return_type "Box"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Gets the bounding box of the current geometry object."
      end

      classrelation 136066 // <generalisation>
	relation 135810 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 136066 // <generalisation>
	  b parent class_ref 141314 // Geometry
      end

      operation 155778 "hit"
	cpp_virtual public explicit_return_type "int"
	nparams 5
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "*t" explicit_type "float"
	  param in name "*data" type class_ref 150018 // HitData
	    defaultvalue "NULL"
	  param in name "minT" explicit_type "float"
	    defaultvalue "0.0f"
	  param in name "maxT" explicit_type "float"
	    defaultvalue "DIST_MAX"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Determines whether the input ray intersects the current geometry object. If it does not, returns 0. If it does, returns -1 if hit from within the object, or 1 if hit from outside the object, and correctly populates the fields of the input HitData object."
      end

      operation 156290 "getNormal"
	cpp_virtual public explicit_return_type "Vector3f"
	nparams 1
	  param in name "point" explicit_type "Vector3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Returns the normal of the current geometry object at the specified point."
      end
    end

    class 149762 "Plane"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A geometry object representing a plane."
      attribute 152066 "p"
	protected explicit_type "plane_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The plane_t struct representing the geometry object."
      end

      classrelation 136194 // <generalisation>
	relation 135938 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 136194 // <generalisation>
	  b parent class_ref 141314 // Geometry
      end

      operation 141186 "bBox"
	cpp_virtual public explicit_return_type "Box"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Gets the bounding box of the current geometry object."
      end

      operation 155906 "hit"
	cpp_virtual public explicit_return_type "int"
	nparams 5
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "*t" explicit_type "float"
	  param in name "*data" type class_ref 150018 // HitData
	    defaultvalue "NULL"
	  param in name "minT" explicit_type "float"
	    defaultvalue "0.0f"
	  param in name "maxT" explicit_type "float"
	    defaultvalue "DIST_MAX"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Determines whether the input ray intersects the current geometry object. If it does not, returns 0. If it does, returns -1 if hit from within the object, or 1 if hit from outside the object, and correctly populates the fields of the input HitData object."
      end

      operation 156418 "getNormal"
	cpp_virtual public explicit_return_type "Vector3f"
	nparams 1
	  param in name "point" explicit_type "Vector3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Returns the normal of the current geometry object at the specified point."
      end
    end

    class 149890 "Triangle"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A geometry object representing a triangle."
      attribute 152194 "t"
	protected explicit_type "triangle_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The triangle_t struct representing the geometry object."
      end

      classrelation 136322 // <generalisation>
	relation 136066 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 136322 // <generalisation>
	  b parent class_ref 141314 // Geometry
      end

      operation 141570 "bBox"
	cpp_virtual public explicit_return_type "Box"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Gets the bounding box of the current geometry object."
      end

      operation 155522 "hit"
	cpp_virtual public explicit_return_type "int"
	nparams 5
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "*t" explicit_type "float"
	  param in name "*data" type class_ref 150018 // HitData
	    defaultvalue "NULL"
	  param in name "minT" explicit_type "float"
	    defaultvalue "0.0f"
	  param in name "maxT" explicit_type "float"
	    defaultvalue "DIST_MAX"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Determines whether the input ray intersects the current geometry object. If it does not, returns 0. If it does, returns -1 if hit from within the object, or 1 if hit from outside the object, and correctly populates the fields of the input HitData object."
      end

      operation 156674 "getNormal"
	cpp_virtual public explicit_return_type "Vector3f"
	nparams 1
	  param in name "point" explicit_type "Vector3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Returns the normal of the current geometry object at the specified point."
      end
    end

    class 150018 "HitData"
      visibility public stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}struct ${name} {
${members}};
"
      explicit_switch_type ""
      
      comment "A struct to hold various data resulting from an intersection."
      attribute 152706 "hit"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 152834 "point"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 152962 "t"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 153090 "object"
	public type class_ref 141314 // Geometry
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} *${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 156546 "triangle_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}struct ${name} {
${members}};
"
      explicit_switch_type ""
      
      comment "A struct representing a triangle."
      attribute 159618 "location"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The first corner of the triangle."
      end

      attribute 159746 "c2"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The second corner of the triangle."
      end

      attribute 159874 "c3"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The third corner of the triangle."
      end
    end

    class 156674 "plane_t"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}struct ${name} {
${members}};
"
      explicit_switch_type ""
      
      comment "A struct representing a plane."
      attribute 160002 "normal"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The normal of the plane."
      end

      attribute 160130 "offset"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The plane offset ('d' in the plane's implicit equation)."
      end
    end

    class 156802 "box_t"
      visibility public stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl "${comment}struct ${name} {
${members}};
"
      explicit_switch_type ""
      
      comment "A struct representing a box."
      attribute 160258 "location"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The first corner of the box."
      end

      attribute 160386 "c2"
	public explicit_type "Vector3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The corner of the box opposite from location."
      end

      attribute 160514 "left"
	public type class_ref 156674 // plane_t
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160642 "right"
	public type class_ref 156674 // plane_t
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160770 "bottom"
	public type class_ref 156674 // plane_t
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160898 "top"
	public type class_ref 156674 // plane_t
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161026 "back"
	public type class_ref 156674 // plane_t
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161154 "front"
	public type class_ref 156674 // plane_t
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 156930 "Mesh2"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit}
{
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A geometry object representing a triangle mesh (mesh2 in the povray format)."
      attribute 161282 "faces"
	protected type class_ref 149890 // Triangle
	stereotype "vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A vector containing the triangles represented by the mesh."
      end

      operation 148994 "bBox"
	cpp_virtual public explicit_return_type "Box"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "Gets the bounding box of the current geometry object."
      end

      classrelation 142850 // <generalisation>
	relation 142594 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 142850 // <generalisation>
	  b parent class_ref 141314 // Geometry
      end

      operation 156034 "hit"
	cpp_virtual public explicit_return_type "int"
	nparams 5
	  param in name "ray" type class_ref 148994 // Ray
	  param in name "*t" explicit_type "float"
	  param in name "*data" type class_ref 150018 // HitData
	    defaultvalue "NULL"
	  param in name "minT" explicit_type "float"
	    defaultvalue "0.0f"
	  param in name "maxT" explicit_type "float"
	    defaultvalue "DIST_MAX"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Determines whether the input ray intersects the current geometry object. If it does not, returns 0. If it does, returns -1 if hit from within the object, or 1 if hit from outside the object, and correctly populates the fields of the input HitData object."
      end

      operation 156162 "getNormal"
	cpp_virtual public explicit_return_type "Vector3f"
	nparams 1
	  param in name "point" explicit_type "Vector3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "Returns the normal of the current geometry object at the specified point."
      end
    end

    class 163458 "Vector3f"
      visibility package 
      cpp_external cpp_decl "${name}
#include <Eigen/Dense>
using namespace Eigen;"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 163586 "Matrix3f"
      visibility package 
      cpp_external cpp_decl "${name}
#include <Eigen/Dense>
using namespace Eigen;"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end
  end
end
